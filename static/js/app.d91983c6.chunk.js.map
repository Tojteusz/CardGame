{"version":3,"sources":["components/CardGame.tsx","App.tsx","web-build/register-service-worker.js"],"names":["cardOrder","suitOrder","CardGame","props","useState","remaining","setRemaining","id","setId","points","setPoints","history","setHistory","code","currentCard","setCurrentCard","prevCard","setPrevCard","getDeck","a","async","fetch","response","json","deck","success","prevIndex","findIndex","v","cards","value","index","deck_id","console","error","nextCard","userState","card","currentIndex","state","currentSuit","suit","prevSuit","log","hEl","prev","cur","point","old","setTimeout","nextRound","current","useEffect","symbolByLetter","letter","s","c","HistoryItem","data","prevSymbol","curSymbol","View","style","backgroundColor","padding","marginBottom","width","borderRadius","justifyContent","flexDirection","Text","color","flex","styles","cardSpace","Image","resizeMode","source","uri","image","bothCenter","fontSize","fontWeight","rowCenter","Fragment","Button","disabled","onPress","title","gameover","TouchableOpacity","FlatList","maxHeight","overflow","renderItem","item","keyExtractor","StyleSheet","create","info","alignItems","height","button","App","container","navigator","window","addEventListener","serviceWorker","register","scope","then","catch"],"mappings":"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","file":"static/js/app.d91983c6.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  Image,\r\n  Button,\r\n  FlatList,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\n\r\nconst cardOrder = [\r\n  \"2\",\r\n  \"3\",\r\n  \"4\",\r\n  \"5\",\r\n  \"6\",\r\n  \"7\",\r\n  \"8\",\r\n  \"9\",\r\n  \"10\",\r\n  \"JACK\",\r\n  \"QUEEN\",\r\n  \"KING\",\r\n  \"ACE\",\r\n];\r\n\r\nconst suitOrder = [\"Hearts\", \"Diamonds\", \"Spades\", \"Clubs\"];\r\n\r\ninterface Card {\r\n  code: string | false;\r\n  image?: string;\r\n  images?: string[];\r\n  index?: number;\r\n  value?:\r\n    | \"2\"\r\n    | \"3\"\r\n    | \"4\"\r\n    | \"5\"\r\n    | \"6\"\r\n    | \"7\"\r\n    | \"8\"\r\n    | \"9\"\r\n    | \"10\"\r\n    | \"JACK\"\r\n    | \"QUEEN\"\r\n    | \"KING\"\r\n    | \"ACE\";\r\n  suit?: \"Spades\" | \"Diamonds\" | \"Clubs\" | \"Hearts\";\r\n}\r\n\r\ninterface HistoryElement {\r\n  prev: string;\r\n  cur: string;\r\n  state: \"lower\" | \"higher\";\r\n  point: boolean;\r\n}\r\n\r\ninterface Deck {\r\n  id: string;\r\n  remaining: number;\r\n}\r\n\r\ninterface NewDeck {\r\n  success: boolean;\r\n  deck_id: string;\r\n  cards: Card[];\r\n  remaining: number;\r\n}\r\n\r\ninterface Props {}\r\n\r\nconst CardGame = (props: Props) => {\r\n  const [remaining, setRemaining] = useState<number>(0);\r\n  const [id, setId] = useState<string>(\"\");\r\n  const [points, setPoints] = useState<number>(0);\r\n  const [history, setHistory] = useState<HistoryElement[]>([]);\r\n\r\n  const [currentCard, setCurrentCard] = useState<Card>({\r\n    code: false,\r\n  });\r\n\r\n  const [prevCard, setPrevCard] = useState<Card>({\r\n    code: false,\r\n  });\r\n\r\n  /** reset deck and point\r\n   * @return void\r\n   **/\r\n  const getDeck = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        \"https://deckofcardsapi.com/api/deck/new/draw/?count=1\"\r\n      );\r\n\r\n      const deck: NewDeck = await response.json();\r\n\r\n      if (deck.success == false)\r\n        throw \"API deckofcardsapi not responding corectly\";\r\n\r\n      setPoints(0);\r\n\r\n      const prevIndex: number = cardOrder.findIndex(\r\n        (v: string) => v === deck.cards[0].value\r\n      );\r\n      setPrevCard({ ...deck.cards[0], ...{ index: prevIndex } });\r\n      setRemaining(deck.remaining);\r\n      setId(deck.deck_id);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  /** take new card from deck and compare with prev\r\n   * @param {\"higher\"|\"lower\"} userState - user selection higer or lower next card\r\n   * @return void\r\n   **/\r\n  const nextCard = async (userState: \"higher\" | \"lower\") => {\r\n    try {\r\n      const response = await fetch(\r\n        `https://deckofcardsapi.com/api/deck/${id}/draw/?count=1`\r\n      );\r\n\r\n      const deck: NewDeck = await response.json();\r\n\r\n      if (deck.success == false)\r\n        throw \"API deckofcardsapi not responding corectly\";\r\n\r\n      const card = deck.cards[0];\r\n\r\n      const currentIndex: number = cardOrder.findIndex(\r\n        (v: string) => v === card.value\r\n      );\r\n      await setCurrentCard({ ...card, ...{ index: currentIndex } });\r\n\r\n      let state: \"higher\" | \"lower\" = \"lower\";\r\n\r\n      if (prevCard.index) {\r\n        if (currentIndex > prevCard.index) {\r\n          state = \"higher\";\r\n        } else if (currentIndex == prevCard.index) {\r\n          const currentSuit: number = suitOrder.findIndex(\r\n            (v: string) => v === card.suit\r\n          );\r\n          const prevSuit: number = suitOrder.findIndex(\r\n            (v: string) => v === prevCard.suit\r\n          );\r\n          if (currentSuit > prevSuit) {\r\n            state = \"higher\";\r\n          }\r\n        }\r\n      }\r\n\r\n      if (state === userState) {\r\n        setPoints(points + 1);\r\n      }\r\n\r\n      console.log(prevCard.code);\r\n      console.log(card.code);\r\n      if (prevCard.code != false && card.code != false) {\r\n        const hEl: HistoryElement = {\r\n          prev: prevCard.code,\r\n          cur: card.code,\r\n          state: state,\r\n          point: state === userState,\r\n        };\r\n        setHistory((old) => [hEl, ...old]);\r\n      }\r\n      console.log(history);\r\n\r\n      setTimeout(\r\n        () => nextRound({ ...deck.cards[0], ...{ index: currentIndex } }),\r\n        2000\r\n      );\r\n\r\n      setRemaining(deck.remaining);\r\n\r\n      return deck;\r\n    } catch (error) {\r\n      console.error(error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  /** start next round, clear current, set prev to current\r\n   * @param {Card} current - current card\r\n   * @return void\r\n   **/\r\n  const nextRound = (current: Card) => {\r\n    setPrevCard(current);\r\n    setCurrentCard({ code: false });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDeck();\r\n  }, []);\r\n\r\n  const symbolByLetter = (\r\n    letter: string\r\n  ): { s: string; c: \"black\" | \"red\" } => {\r\n    letter[1];\r\n\r\n    switch (letter[1]) {\r\n      case \"S\":\r\n        return { s: \"♣\", c: \"black\" };\r\n      case \"D\":\r\n        return { s: \"♦\", c: \"red\" };\r\n      case \"C\":\r\n        return { s: \"♠\", c: \"black\" };\r\n      default:\r\n        return { s: \"♥\", c: \"red\" };\r\n    }\r\n  };\r\n\r\n  const HistoryItem = ({ data }: { data: HistoryElement }) => {\r\n    const prevSymbol = symbolByLetter(data.prev);\r\n    const curSymbol = symbolByLetter(data.cur);\r\n    return (\r\n      <View\r\n        style={{\r\n          backgroundColor: \"#205b23\",\r\n          padding: 3,\r\n          marginBottom: 5,\r\n          width: 100,\r\n          borderRadius: 5,\r\n          justifyContent: \"space-between\",\r\n          flexDirection: \"row\",\r\n        }}\r\n      >\r\n        <Text style={[{ color: curSymbol.c }]}>\r\n          {data.cur[0] == \"0\" ? 10 : data.cur[0]}\r\n          {curSymbol.s}\r\n        </Text>\r\n        <Text>{data.state === \"lower\" ? \"<\" : \">\"}</Text>\r\n        <Text style={[{ color: prevSymbol.c }]}>\r\n          {data.prev[0] == \"0\" ? 10 : data.prev[0]}\r\n          {prevSymbol.s}\r\n        </Text>\r\n        <Text>{data.point ? \"🟢\" : \"🔴\"}</Text>\r\n      </View>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <View style={{ width: \"100%\" }}>\r\n      <View\r\n        style={{\r\n          flex: 1,\r\n          flexDirection: \"row\",\r\n          justifyContent: \"space-around\",\r\n        }}\r\n      >\r\n        {!currentCard.code && (\r\n          <View style={[styles.cardSpace]}>\r\n            <Image\r\n              style={[styles.card]}\r\n              resizeMode=\"contain\"\r\n              source={{\r\n                uri:\r\n                  \"https://opengameart.org/sites/default/files/card%20back%20black.png\",\r\n              }}\r\n            />\r\n          </View>\r\n        )}\r\n\r\n        {currentCard.code && (\r\n          <View style={[styles.cardSpace]}>\r\n            <Image\r\n              style={[styles.card]}\r\n              resizeMode=\"contain\"\r\n              source={{\r\n                uri: currentCard.image,\r\n              }}\r\n            />\r\n          </View>\r\n        )}\r\n\r\n        <View style={[styles.bothCenter]}>\r\n          <Text style={{ fontSize: 30, fontWeight: \"900\", color: \"white\" }}>\r\n            LOWER or HIGHER\r\n          </Text>\r\n          <View\r\n            style={[\r\n              styles.rowCenter,\r\n              { width: 300, justifyContent: \"space-between\", marginBottom: 40 },\r\n            ]}\r\n          >\r\n            <Text style={{ fontSize: 20 }}>Points 🟢: {points} </Text>\r\n            <Text style={{ fontSize: 20 }}>Card left 🃏: {remaining} </Text>\r\n          </View>\r\n          <View style={{ marginBottom: 30 }}>\r\n            {remaining > 0 && (\r\n              <React.Fragment>\r\n                <Text>Will the next card be higher or lower?</Text>\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    justifyContent: \"space-between\",\r\n                  }}\r\n                >\r\n                  <Button\r\n                    disabled={currentCard.code != false}\r\n                    color=\"#e0a230\"\r\n                    onPress={() => nextCard(\"higher\")}\r\n                    title=\"Higher\"\r\n                  />\r\n                  <Button\r\n                    disabled={currentCard.code != false}\r\n                    onPress={() => nextCard(\"lower\")}\r\n                    title=\"Lower\"\r\n                  />\r\n                </View>\r\n              </React.Fragment>\r\n            )}\r\n            {remaining <= 0 && (\r\n              <React.Fragment>\r\n                <Text style={[styles.gameover]}>Game Over</Text>\r\n                <Text style={[styles.gameover]}>Your score: {points}</Text>\r\n              </React.Fragment>\r\n            )}\r\n          </View>\r\n\r\n          <View style={{}}>\r\n            <TouchableOpacity\r\n              style={{\r\n                marginBottom: 20,\r\n                padding: 8,\r\n                borderRadius: 5,\r\n                backgroundColor: \"#205b23\",\r\n              }}\r\n              onPress={() => getDeck()}\r\n            >\r\n              <Text>RESTART</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n          <Text>History:</Text>\r\n          <FlatList\r\n            style={{ maxHeight: 200, overflow: \"hidden\" }}\r\n            data={history}\r\n            renderItem={({ item }) => <HistoryItem data={item} />}\r\n            keyExtractor={(item) => item.prev}\r\n          />\r\n        </View>\r\n        {prevCard.code && (\r\n          <View style={[styles.cardSpace]}>\r\n            <Image\r\n              style={[styles.card]}\r\n              resizeMode=\"contain\"\r\n              source={{ uri: prevCard.image }}\r\n            />\r\n          </View>\r\n        )}\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default CardGame;\r\n\r\nconst styles = StyleSheet.create({\r\n  info: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  cardSpace: {\r\n    borderRadius: 20,\r\n    backgroundColor: \"#205b23\",\r\n    padding: 20,\r\n  },\r\n  card: {\r\n    width: 300,\r\n    height: 523,\r\n    borderRadius: 20,\r\n    overflow: \"hidden\",\r\n  },\r\n  button: {\r\n    backgroundColor: \"#e0a230\",\r\n  },\r\n  gameover: { fontSize: 30, color: \"white\" },\r\n  rowCenter: {\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"row\",\r\n  },\r\n  bothCenter: {\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n","import React from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport CardGame from \"./components/CardGame\";\n\nexport default function App() {\n  return (\n    <View style={styles.container}>\n      <CardGame />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: \"100%\",\n    backgroundColor: \"#308834\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}